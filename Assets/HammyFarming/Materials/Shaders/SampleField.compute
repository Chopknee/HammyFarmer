// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel CSMain

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture
RWTexture2D<float4> Input;

uint3 sampleCoordinates;

RWStructuredBuffer<float> outCol;

[numthreads(8,8,1)]
void CSMain (uint3 id : SV_DispatchThreadID) {
    // TODO: insert actual code here!
	//The main point of this is to sample an area around the specified coordinates
    //Result[id.xy] = float4(id.x & id.y, (id.x & 15)/15.0, (id.y & 15)/15.0, 0.0);
	if (id.x == sampleCoordinates.x && id.y == sampleCoordinates.y) {
		outCol[0] = Input[id.xy].x;
		outCol[1] = Input[id.xy].y;
		outCol[2] = Input[id.xy].z;
	}
}
